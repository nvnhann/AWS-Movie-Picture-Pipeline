name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'

env:
  NODE_VERSION: 18.x

jobs:
  lint:
    name: Frontend Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            npm-
      - run: npm install
      - run: npm run lint -- --fix

  test:
    name: Frontend Testing
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm test

  build:
    name: Build and Push Docker image to Amazon ECR
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: aws-actions/amazon-ecr-login@v1
      - run: |
          aws eks update-kubeconfig --name cluster
          export EXTERNALIP=$(kubectl get svc backend -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}{"\n"}{.status.loadBalancer.ingress[0].ip}')
          echo $EXTERNALIP
          docker build -t ${{ steps.login-ecr.outputs.registry }}/frontend:latest --build-arg=REACT_APP_MOVIE_API_URL=http://$EXTERNALIP .
          docker push ${{ steps.login-ecr.outputs.registry }}/frontend:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: aws eks update-kubeconfig --name cluster
      - run: |
          ./init.sh || true
        working-directory: ./setup
      - run: |
          kustomize edit set image frontend=$REGISTRY/frontend:latest
        working-directory: ./frontend/k8s
      - run: kustomize build ./frontend/k8s | kubectl apply -f -
